此次上传的代码里面：GenerateTaskBase总是报错，说是不完全的类，这一部分不太清除是哪里出错了。然后就是涉及到向其他machine转发的程序（自定义application），这一部分的逻辑还没太搞清楚，所以sendbase类也还缺一块。
下面是修改时的思路：
/-------------------------------------代码结构修改思路-----------------------------------------------------------------------------------------/
在阅读设计模式的时候来灵感了，后面整理结构的时候，不仅要实现各个大部件的可插拔，也要实现大部件里面各个功能的可替换（利用Decorator）。
例如在实现Orcha的时候代码大体是这个样子的：
class Manager:public Object{
	FuncBase& 调度;
	FuncBase& 发送；
	FuncBase& 接受；
	FuncBase& 生成任务； 
	FuncBase& 等等。。。；
};
现在知识说明，我规定了一个Orcha大体有这么几个功能。各个功能可以在具体运行的时候调用Orchastrator的构造函数绑定上去。这样每次添加新功能的时候只需要继承FuncBase，再在调用构造函数的时候稍微改一下就行了。还可以再改进一下，为了避免我在发送功能那里多绑定了一个调度功能。可以让各个功能继承自不同的基类。这样会更好一些。
/-------------------------------------代码结构修改思路-----------------------------------------------------------------------------------------/个人想法是一个Machine内部包含可能多个resource和Manager。

